{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAc1C,OAEC,aADA,CACA,QAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdf,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAefM,GAfe,4CAAH,sDCYLO,EAVK,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEtB,sBAAKgB,UAAU,yCAAf,UACC,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCaQS,EAhBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACfd,mBAAS,CAClCqB,KAAM,GACNe,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WACT1B,EAAQC,GAAU0B,MAAK,SAACC,GACvBC,YAAW,WACVJ,EAAS,CACRjB,KAAMoB,EACNL,SAAS,MAER,UAEF,CAACtB,IAEGuB,EDf2BM,CAAa7B,GAAjCa,EADmB,EACzBN,KAAce,EADW,EACXA,QAEtB,OACC,eAAC,WAAD,WACC,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACEL,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEcZmB,EAvBM,WAAO,IAAD,EACU5C,mBAAS,CAAC,cADpB,mBACnB6C,EADmB,KACP9C,EADO,KAO1B,OACC,eAAC,WAAD,WACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACE8C,EAAWtB,KAAI,SAACT,GAAD,OAEf,aADA,CACC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCdnBgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.c030f95f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState(''); //string vacio\r\n\r\n\tconst handleInputValue = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t// <Fragment> //Utilzar fragment si los elementos no estan agrupados por un form\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputValue} />\r\n\t\t</form>\r\n\t\t// </Fragment>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired, //Funcion requerida\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=Ln3vpsxnyD6Ly2TOx4deiKgfJGpzYTkI`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\tconsole.log(id, title, url);\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 3000);\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state; //{data: [],loading: true,}\r\n};\r\n","import React, { Fragment, useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tsetCategories([...categories, 'Gunnm']); // da el mismo resultado\r\n\t// \tsetCategories((cats) => [...cats, 'Gunmm']);\r\n\t// };\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1>GifExpertApp</h1>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t// <li key={categories}>{categories}</li>\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}